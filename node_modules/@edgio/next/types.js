"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FALLBACK_TYPES = exports.PAGE_TYPES = exports.PAGE_SOURCE_TYPES = exports.RENDER_MODES = void 0;
exports.RENDER_MODES = {
    server: 'server',
    serverless: 'serverless',
};
exports.PAGE_SOURCE_TYPES = {
    app: 'app',
    pages: 'pages',
};
exports.PAGE_TYPES = {
    // Always rendered in serverless by the next server.
    ssr: 'SSR',
    // Prerendered at build time and uploaded to S3 and served directly by the CDN.
    ssg: 'SSG',
    // Prerendered at build time for defined URLs of getStaticPaths are served from S3.
    // Other URLs are rendered based on the fallback type.
    isg: 'ISG',
    // Same as ISG but the prerendered pages on S3 can expire,
    // and then it's updated by the response from next server.
    isr: 'ISR',
    // Always rendered in serverless by the next server.
    api: 'API',
    // Template files such as _app.js, _document.js, _error.js, etc. We ignore them.
    template: 'TEMPLATE',
};
exports.FALLBACK_TYPES = {
    // URLs which were not prerendered at build time are rendered asynchronously.
    // The fallback page version is served in meantime.
    true: 'fallback:true',
    // URLs which were not prerendered at build time are not rendered.
    // The prerendered 404 Not Found is returned instead.
    false: 'fallback:false',
    // URLs which were not prerendered at build time are rendered by the next server
    // and cached for long time. Same as SSR.
    blocking: 'fallback:blocking',
};
