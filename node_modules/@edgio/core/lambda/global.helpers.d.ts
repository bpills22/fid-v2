import DevServerOptions from '../dev/DevServerOptions';
import LambdaResponse from '../runtime/LambdaResponse';
import { RuntimeOptions } from './RuntimeOptions';
declare global {
    interface String {
        writeToStream: (response: LambdaResponse) => void;
    }
}
/**
 * This class is used to store global variables that are used in the runtime,
 * but are not passed as parameters to the functions, instead they are stored
 * in the global scope. For instance, as we don't have a way to pass values
 * between prod.js or dev.js script, we do it here, by accesing the global scope.
 */
export declare class EdgioRuntimeGlobal {
    static get runtimeOptions(): RuntimeOptions | undefined;
    static set runtimeOptions(options: RuntimeOptions | undefined);
    static get isCacheEnabled(): boolean;
    static set isCacheEnabled(value: boolean);
    static get devOptions(): DevServerOptions | undefined;
    static set devOptions(options: DevServerOptions | undefined);
}
export {};
