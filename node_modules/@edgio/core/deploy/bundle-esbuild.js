"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bundleRouterAndConfig = exports.bundle = void 0;
const esbuild_1 = require("esbuild");
const path_1 = require("path");
const paths_1 = require("./paths");
const config_1 = require("../config");
/**
 * Creates a serverless bundle using ESBuild
 * @param options Options for ESBuild
 */
async function bundle(options) {
    // Always exclude fsevents as it cannot be bundled - it's binary.
    const external = ['fsevents'];
    const esBuildDefaults = {
        bundle: true,
        minify: false,
        platform: 'node',
        // This could potentially use whatever cloud_runtime is set to in the config.
        target: 'node18.0',
        sourcemap: true,
        // Esbuild shows warnings when project is set to type module,
        // but edgio.config.js is using commonjs. We want to output only errors by default.
        logLevel: 'error',
        external,
    };
    await (0, esbuild_1.build)({
        ...esBuildDefaults,
        ...options,
    });
}
exports.bundle = bundle;
/**
 * Builds the user's routes and edgio.config files.
 * @param options Options for ESBuild
 */
async function bundleRouterAndConfig(options = {}) {
    // Use process.stdout.write to be able to concatenate `done.` to the same output line.
    process.stdout.write(`> Bundling router... `);
    const configPath = (0, paths_1.getSrcConfigPath)();
    const config = (0, config_1.getConfigFromFile)(configPath);
    const routerPath = (0, paths_1.getSrcRouterPath)(config);
    const destRouterPath = (0, path_1.join)(process.cwd(), paths_1.JS_INTERNAL_DIR, paths_1.ROUTES_FILE_NAME);
    const destConfigPath = (0, path_1.join)(process.cwd(), paths_1.JS_INTERNAL_DIR, paths_1.CONFIG_FILE_NAME);
    await Promise.all([
        bundle({
            ...options,
            entryPoints: [routerPath],
            outfile: destRouterPath,
        }),
        bundle({
            ...options,
            entryPoints: [configPath],
            outfile: destConfigPath,
        }),
    ]);
    process.stdout.write('done.\n');
}
exports.bundleRouterAndConfig = bundleRouterAndConfig;
