import { AbsoluteFolderName } from 'ts-fs-utils';
import Config from './config';
import Router from './router/Router';
/**
 * Creates EdgioFS object that contains all the paths to the files and folders
 * @param appDir Base directory of the app, from this directory we will
 * create all the paths to the files and folders in the app.
 * @returns
 */
export declare const createEdgioFS: (appDir: string, buildFolder?: string) => AbsoluteFolderName & {
    srcEdgioConfig: import("ts-fs-utils").AbsoluteFileName<Config>;
    srcEdgioConfigCjs: import("ts-fs-utils").AbsoluteFileName<Config>;
    srcRoutes: import("ts-fs-utils").AbsoluteFileName<string>;
    srcRoutesTs: import("ts-fs-utils").AbsoluteFileName<string>;
    edgio: AbsoluteFolderName & {
        temp: AbsoluteFolderName;
        source: AbsoluteFolderName;
        s3: AbsoluteFolderName;
        s3Permanent: AbsoluteFolderName;
        staticAssetsExpiration: import("ts-fs-utils").AbsoluteFileName<string>;
        lambda: AbsoluteFolderName & {
            app: AbsoluteFolderName;
            internal: AbsoluteFolderName & {
                backend: AbsoluteFolderName & {
                    handler: import("ts-fs-utils").AbsoluteFileName<string>;
                };
                config: import("ts-fs-utils").AbsoluteFileName<Config>;
                routes: import("ts-fs-utils").AbsoluteFileName<Router>;
                staticAssetManifest: import("ts-fs-utils").AbsoluteFileName<string>;
            };
        };
    };
};
export type EdgioFS = ReturnType<typeof createEdgioFS>;
export declare const createLambdaFs: (appDir: string, lambdaFolderName?: string) => AbsoluteFolderName & {
    app: AbsoluteFolderName;
    internal: AbsoluteFolderName & {
        backend: AbsoluteFolderName & {
            handler: import("ts-fs-utils").AbsoluteFileName<string>;
        };
        config: import("ts-fs-utils").AbsoluteFileName<Config>;
        routes: import("ts-fs-utils").AbsoluteFileName<Router>;
        staticAssetManifest: import("ts-fs-utils").AbsoluteFileName<string>;
    };
};
