export interface EdgioErrorOptions {
    title: string;
    message: string;
    statusCode: number;
    statusMessage?: string;
    level?: number;
    details?: string;
    stack?: string;
}
export interface EdgioErrorRenderOptions {
    type?: 'html' | 'json';
    requestId?: string;
    includeStack?: boolean;
}
export declare class EdgioError extends Error {
    readonly title: string;
    readonly message: string;
    readonly statusCode: number;
    readonly statusMessage: string;
    readonly level: number;
    readonly details?: string;
    readonly stack?: string;
    constructor({ title, message, statusCode, statusMessage, level, details, stack, }: EdgioErrorOptions);
    render(options?: EdgioErrorRenderOptions): string;
    getType(): string;
}
export declare const isEdgioError: (error: any) => error is EdgioError;
/**
 * Returns a string of HTML content for the EdgioError
 * with inserted values.
 * @param values
 * @returns {string}
 */
export declare const getEdgioErrorAsHtml: (values: Record<string, string | string[] | number | undefined>) => string;
