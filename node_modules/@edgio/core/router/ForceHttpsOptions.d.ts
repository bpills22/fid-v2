import { HttpStatusCode } from '../types';
/**
 * ForceHttpsOptions
 */
export default interface ForceHttpsOptions {
    /**
     * The redirect code to use when redirecting to HTTPS.
     * @default 301
     */
    redirectCode?: HttpStatusCode;
    /**
     * When true, the `Strict-Transport-Security` header will be set
     * and the browser will remember that this site is only to be accessed using HTTPS.
     * @example `Strict-Transport-Security: max-age=31536000;`
     * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security
     * @default true
     */
    hsts?: boolean;
    /**
     * The max-age of the `Strict-Transport-Security` header.
     * The max-age is the time in seconds that the browser should remember that this site is only to be accessed using HTTPS.
     * @default 15768000 (6 months in seconds)
     */
    hstsMaxAge?: number;
    /**
     * The `includeSubDomains` directive of the `Strict-Transport-Security` header.
     * When true, all subdomains will be forced to use HTTPS regardless if they really support it or not.
     * Be careful with this option, it can break your subdomains if they don't support HTTPS.
     * @default false
     */
    hstsIncludeSubDomains?: boolean;
    /**
     * The `preload` directive of the `Strict-Transport-Security` header.
     * When true, the domain will be included in the HSTS preload list of web browsers.
     * Be careful with this option, once the domain is included in the preload list, it will be very hard to remove it,
     * and you can't go easily back to HTTP anymore.
     * @see https://hstspreload.org/
     * @default false
     */
    hstsPreload?: boolean;
}
