import { EdgeFunction, EdgeFunctionPath, Features, Rules } from '../types';
/**
 * Gets the js_path specified from the EdgeFunction
 */
export declare function getEdgeFunctionJsPath(edgeFunction: EdgeFunction): EdgeFunctionPath;
/**
 * Returns an array containing all rules that contain the edge_function feature.
 * @param rules The router rules
 * @returns
 */
export declare function getEdgeFunctionFeatures(rules: Rules[]): Features[];
/**
 * Returns an array containing all the edge function files
 * referenced by the specified rules.
 * @param rules The router rules
 */
export declare function getEdgeFunctionFiles(rules: Rules[]): string[];
/**
 * Calls the specified callback for each feature in the rules array
 * @param rules The rules to traverse
 * @param callback The callback to call with each feature
 */
export declare function forEachFeature(rules: any, callback: (features: Features) => void): void;
/**
 * Converts all edge_function features from the legacy EdgeFunctionPath to EdgeFunctionObject.
 * @param rules The rules to traverse
 */
export declare function forceEdgeFunctionFeatureObject(rules: any, default_version_number: number): void;
/**
 * Returns true when specified rules contain
 * at least one edge_function feature.
 */
export declare function containsEdgeFunctionFeature(rules: Rules[]): boolean;
