{
  "name": "@edgio/core",
  "version": "7.13.13",
  "main": "./index.js",
  "license": "UNLICENSED",
  "config": {
    "esbuild_opts_lambda": "esbuild --bundle --platform=node --target=node18.0 --log-level=error --sourcemap",
    "esbuild_opts_browser": "esbuild --bundle --platform=browser --external:v8 --log-level=error --sourcemap --minify",
    "esbuild_opts_edgefunction_sdk": "esbuild --bundle --platform=node --target=node18 --log-level=error",
    "esbuild_opts_edgefunction_esm": "esbuild --bundle --platform=neutral --target=es2020 --format=esm --log-level=error"
  },
  "comments": {
    "1": "When bundling code, there are different targets: lambda, browser, edge function sdk, and edge function esm.",
    "2": "The lambda target is for the serverless functions that run on AWS Lambda.",
    "3": "The browser target is for the code that runs in the browser, aka 'fiddler'.",
    "4": "The edge function sdk target is for code used by SDK to emulate the edge environment.",
    "5": "The edge function esm target is for code bundled and uploaded to run on the edge.",
    "6": "The settings for esm must match settings in EdgeFunctionsNodeBuilder.ts"
  },
  "scripts": {
    "docs": "typedoc",
    "build": "rm -rf ./dist && mkdir -p ./dist/schemas && cp -r package.json README.md serverless.yml default-app ./dist && cp schemas/edgecontrol-scl-schema.json ./dist/schemas/ && tsc && npm run bundle-handler && npm run bundle-server && npm run bundle-edge-functions-worker && npm run bundle-edge-functions-browser-worker && npm run bundle-edge-functions-sdk && npm run bundle-edge-functions-index-template && npm run bundle-wasm",
    "bundle-server": "$npm_package_config_esbuild_opts_lambda src/lambda/server.ts --outfile=dist/lambda/server.dist.js",
    "bundle-handler": "$npm_package_config_esbuild_opts_lambda src/lambda/handler.ts --outfile=dist/lambda/handler.dist.js",
    "bundle-worker": "$npm_package_config_esbuild_opts_edgefunction_sdk src/runtime/edge-functions/Worker.ts --outfile=dist/runtime/edge-functions/Worker.js",
    "bundle-parent-interface": "$npm_package_config_esbuild_opts_edgefunction_sdk src/runtime/edge-functions/EdgeFunctionParentInterface.ts --outfile=dist/runtime/edge-functions/EdgeFunctionParentInterface.js",
    "bundle-edge-functions-worker": "$npm_package_config_esbuild_opts_edgefunction_sdk src/runtime/edge-functions/EdgeFunctionWorker.ts --outfile=dist/runtime/edge-functions/EdgeFunctionWorker.js",
    "bundle-object-inspect": "./bundle-object-inspect.sh $npm_package_config_esbuild_opts_edgefunction_sdk",
    "bundle-edge-functions-browser-worker": "$npm_package_config_esbuild_opts_browser src/runtime/edge-functions/EdgeFunctionWorker.ts --outfile=dist/runtime/edge-functions/EdgeFunctionBrowserWorker.js",
    "bundle-edge-functions-sdk": "npm run bundle-object-inspect && $npm_package_config_esbuild_opts_edgefunction_esm src/runtime/edge-functions/sdk.js --outfile=dist/runtime/edge-functions/sdk.js",
    "bundle-edge-functions-index-template": "$npm_package_config_esbuild_opts_edgefunction_esm src/deploy/edge-functions/edgeFunctionsIndexCodeTemplate.js --outfile=dist/deploy/edge-functions/edgeFunctionsIndexCodeTemplate.js",
    "bundle-wasm": "cp -v src/runtime/edge-functions/quickjs-*.wasm dist/runtime/edge-functions/",
    "watch": "npm-watch",
    "ts:watch": "tsc --watch",
    "push-build": "npm run build && cd dist && yalc push --force && cd ..",
    "release": "cd ./dist; npm publish --access public",
    "test": "npx jest --watchAll=false --forceExit",
    "test-build": "npm run bundle-worker && npm run bundle-parent-interface && npm run bundle-wasm",
    "test-quickjs": "npm run test-build && npm run bundle-object-inspect && npx jest --coverage=false test/runtime/EdgeFunctionsManager.test.js",
    "create-types": "json2ts schemas/edgecontrol-scl-schema.json src/types.ts",
    "generate": "npm run bundle-object-inspect && npx ts-node test/runtime/edge_function_tests/generator/generate-javascript.js",
    "test-server": "npm run generate && node test/runtime/edge_function_tests/generator/webserver.js"
  },
  "quickjs": {
    "version-tag": "1.0.2"
  },
  "dependencies": {
    "@babel/parser": "^7.23.9",
    "@babel/traverse": "^7.23.9",
    "@types/lodash.clonedeep": "^4.5.6",
    "@vercel/ncc": "^0.34.0",
    "abort-controller": "^3.0.0",
    "acorn": "^8.11.3",
    "acorn-walk": "^8.3.2",
    "ajv": "^8.12.0",
    "buffer": "^6.0.3",
    "cache-control-parser": "^2.0.2",
    "chalk": "^4.1.2",
    "chokidar": "^3.5.1",
    "cls-hooked": "^4.2.2",
    "cookie": "^0.7.0",
    "deepmerge": "^4.2.2",
    "esbuild": "^0.14.49",
    "express": "^4.17.3",
    "fs-extra": "^8.1.0",
    "globby": "^11.0.2",
    "http-proxy": "^1.18.1",
    "lambda-stream": "^0.5.0",
    "lodash.clonedeep": "^4.5.0",
    "lru-cache": "^7.14.0",
    "node-fetch": "^2.7.0",
    "path-to-regexp": "^6.2.0",
    "pino": "^6.13.3",
    "qs": "^6.11.0",
    "resolve-package-path": "^4.0.3",
    "semver": "^7.3.5",
    "sharp": "0.32.6",
    "shelljs": "^0.8.5",
    "slash": "^3.0.0",
    "stream-buffers": "^3.0.2",
    "ts-fs-utils": "1.0.15",
    "uuid": "^8.3.2",
    "whatwg-url": "^14.0.0",
    "workbox-build": "^6.5.4",
    "ws": "^8.18.0"
  },
  "publishConfig": {
    "directory": "dist"
  },
  "watch": {
    "push-build": {
      "patterns": [
        "src",
        "bin",
        "serverless.yml",
        "default-app",
        "package.json"
      ],
      "extensions": [
        "js",
        "ts"
      ],
      "quiet": false
    }
  },
  "jest": {
    "maxWorkers": "50%",
    "clearMocks": true,
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.{ts,js}",
      "!**/node_modules/**",
      "!**/mocks/**",
      "!**/index.ts"
    ],
    "testMatch": [
      "**/test/**/*.test.js"
    ],
    "transform": {
      "^.+\\.(t|j)sx?$": "@swc/jest"
    },
    "moduleFileExtensions": [
      "ts",
      "js",
      "json"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/test/jest.js"
    ],
    "transformIgnorePatterns": [
      "<rootDir>/node_modules/"
    ],
    "moduleNameMapper": {
      "../package.json": "<rootDir>/package.json",
      "^@edgio/core(.*)$": "<rootDir>/src/$1"
    }
  },
  "devDependencies": {
    "@swc/core": "^1.3.100",
    "@swc/jest": "^0.2.29",
    "@types/aws-lambda": "^8.10.122",
    "@types/babel__traverse": "^7.18.3",
    "@types/cls-hooked": "^4.3.1",
    "@types/cookie": "^0.3.3",
    "@types/express": "^4.17.7",
    "@types/fs-extra": "^8.1.1",
    "@types/http-proxy": "^1.17.4",
    "@types/jest": "^26.0.23",
    "@types/lru-cache": "^5.1.0",
    "@types/node": "^14.6.4",
    "@types/node-fetch": "^2.6.2",
    "@types/route-parser": "^0.1.3",
    "@types/semver": "^7.3.9",
    "@types/shelljs": "^0.8.8",
    "@types/uuid": "^8.0.1",
    "@types/webpack-bundle-analyzer": "^3.9.0",
    "@types/whatwg-url": "^11.0.4",
    "@types/workbox-build": "^5.0.1",
    "@types/ws": "^8.5.11",
    "ajv": "^8.12.0",
    "chai": "^4.3.7",
    "chai-as-promised": "^7.1.2",
    "json-schema-to-typescript": "^11.0.2",
    "json2ts": "0.0.7",
    "jsonschema": "^1.4.1",
    "lodash": "^4.17.21",
    "nock": "^13.5.4",
    "object-inspect": "^1.12.3",
    "require-from-string": "^2.0.2",
    "stripe": "^9.12.0",
    "ts-node": "^10.9.1",
    "typescript": "^4.9.4",
    "webpack": "^5.27.0",
    "yaml": "^2.2.1"
  }
}
