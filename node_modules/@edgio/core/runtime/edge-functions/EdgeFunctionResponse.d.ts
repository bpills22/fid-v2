/// <reference types="node" />
import EdgeFunctionHeaders from './EdgeFunctionHeaders';
export default class EdgeFunctionResponse {
    /**
     * The HTTP status code
     */
    statusCode: number;
    /**
     * The HTTP status message. It's undefined by default and if left undefined, the response
     * should set it to the default status message for the assigned status code.
     *
     * Connascence of behavior with Sailfish. See http_message.cc
     */
    statusMessage?: string;
    /**
     * The response body as a string or a Buffer
     */
    body?: Buffer;
    /**
     * The number of bytes read from the response body so far
     */
    bodyBytesRead: number;
    /**
     * The response headers as a dictionary of (name, value) pairs. Value can be a string
     * or an array of strings when the header appears more than once in the response.
     * E.g. multiple set-cookie: headers
     */
    headers: EdgeFunctionHeaders;
    /**
     * A Response becomes immutable after return statement is called
     */
    responseReturned: boolean;
    /**
     * A Response body cannot be appended to after being finalized
     */
    responseBodyFinalized: boolean;
    /**
     * A Response body cannot be read after end of stream as been sent.
     */
    responseBodyChunksReadEndOfStreamSent: boolean;
    /**
     * Creates a new EdgeFunctionResponse out of any object that fulfils basic interface of a generalized Response.
     */
    constructor({ statusCode, statusMessage, body, headers, }: {
        statusCode?: number;
        statusMessage?: string;
        body?: string | Buffer | Uint8Array | ArrayBuffer;
        headers?: {
            [name: string]: string | string[];
        };
    });
    hasChunksToRead(): boolean;
    readStreamingBodyChunk(maxChunkSize: number): Buffer | undefined;
    readBodyChunk(chunkOffset: number, maxChunkSize: number): Buffer | undefined;
    static createFromResponse(response: EdgeFunctionResponse): EdgeFunctionResponse;
}
