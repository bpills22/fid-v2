"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileName = void 0;
const FileExtension_1 = require("./FileExtension");
const Name_1 = require("./Name");
/**
 * Represents the file name, which is composed of name and extension. This is just the name of the file,
 * withouth folder path, so slashes are not allowed. If you want to represent file name with folder path,
 * use RelativeFileName or AbsoluteFileName.
 */
class FileName {
    constructor(p1, p2) {
        if (typeof p1 === "string") {
            const parsed = FileName.parse(p1);
            this.name = parsed[0];
            this.extension = parsed[1];
        }
        else {
            this.name = p1;
            this.extension = p2 ?? new FileExtension_1.FileExtension("");
        }
        this.value = this.name.value + this.extension.value;
    }
    static from(source) {
        return new FileName(source);
    }
}
exports.FileName = FileName;
FileName.parse = (name) => {
    if (name.indexOf("/") > -1)
        throw new Error("FileName cannot contain slash");
    const dotIndex = name.lastIndexOf(".");
    if (dotIndex > -1) {
        const nameWithoutExtension = new Name_1.Name(name.substring(0, dotIndex));
        const extension = new FileExtension_1.FileExtension(name.substring(dotIndex));
        return [nameWithoutExtension, extension];
    }
    else {
        const nameWithoutExtension = new Name_1.Name(name);
        const extension = new FileExtension_1.FileExtension();
        return [nameWithoutExtension, extension];
    }
};
